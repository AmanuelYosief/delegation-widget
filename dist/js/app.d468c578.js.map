{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?de97","webpack:///./src/App.vue?9bbd","webpack:///./src/components/IrisLedger.vue?bee5","webpack:///src/components/IrisLedger.vue","webpack:///./src/components/IrisLedger.vue?9dd9","webpack:///./src/components/IrisLedger.vue","webpack:///./src/components/CosmosLedger.vue?49f0","webpack:///src/components/CosmosLedger.vue","webpack:///./src/components/CosmosLedger.vue?52e9","webpack:///./src/components/CosmosLedger.vue","webpack:///./src/components/TerraLedger.vue?3e66","webpack:///src/components/TerraLedger.vue","webpack:///./src/components/TerraLedger.vue?4dbf","webpack:///./src/components/TerraLedger.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a37b","webpack:///./src/App.vue?180a","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_1420785c_render","_vm","this","_h","$createElement","_c","_self","staticStyle","vertical-align","attrs","id","_v","msg","staticRenderFns","IrisLedgervue_type_template_id_0acbdfbc_render","staticClass","width","display","src","alt","title","height","staked","_s","denom","stakedUSD","_e","price","on","click","show","draggable","scrollable","type","data-dismiss","aria-label","hide","aria-hidden","color","readytodelegate","connecting","isdelegating","success","error","connected","tryConnect","bech32","balance_available","balance_delegated","balance_total","directives","rawName","expression","modifiers","number","domProps","keypress","onlyNumber","input","$event","target","composing","delegation","_n","blur","$forceUpdate","delegate","IrisLedgervue_type_template_id_0acbdfbc_staticRenderFns","IrisDelegateTool","transport","TransportU2F_default","a","cdt","setNodeURL","curformatter","Intl","NumberFormat","style","currency","amtformatter","minimumFractionDigits","maximumFractionDigits","IrisLedgervue_type_script_lang_js_","props","restUrl","String","myAddr","pk","path","accInfo","sequence","reply","debug","chainId","validator","rewards","hrp","computed","consoleStatus","consoleLog","created","init","methods","$modal","keyCode","which","preventDefault","log","list","console","_init","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","baseamount","retrieveValidators","validators","sent","format","big_default","totalShares","getPrice","$emit","stop","arguments","_tryConnect","_callee2","_context2","connect","t0","abrupt","lastError","retrieveAddress","t1","concat","getAccountInfo","balance","parseInt","retrieveBalances","delegationsTotal","add","_delegate","_callee3","txContext","dummyTx","signedTx","response","_context3","txCreateDelegate","sign","txSubmit","components_IrisLedgervue_type_script_lang_js_","component","componentNormalizer","IrisLedger","CosmosLedgervue_type_template_id_a9b01a8a_render","CosmosLedgervue_type_template_id_a9b01a8a_staticRenderFns","CosmosDelegateTool","CosmosLedgervue_type_script_lang_js_transport","CosmosLedgervue_type_script_lang_js_cdt","CosmosLedgervue_type_script_lang_js_curformatter","CosmosLedgervue_type_script_lang_js_amtformatter","CosmosLedgervue_type_script_lang_js_","components_CosmosLedgervue_type_script_lang_js_","CosmosLedger_component","CosmosLedger","TerraLedgervue_type_template_id_7f14a164_render","TerraLedgervue_type_template_id_7f14a164_staticRenderFns","TerraDelegateTool","TerraLedgervue_type_script_lang_js_transport","TerraLedgervue_type_script_lang_js_cdt","TerraLedgervue_type_script_lang_js_curformatter","TerraLedgervue_type_script_lang_js_amtformatter","TerraLedgervue_type_script_lang_js_","components_TerraLedgervue_type_script_lang_js_","TerraLedger_component","TerraLedger","Appvue_type_script_lang_js_","components","cosmosStake","terraStake","irisStake","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","VModal","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.d468c578.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"vertical-align\":\"top\"},attrs:{\"id\":\"app\"}},[_c('h3',[_vm._v(\"Validating Networks\")]),_c('CosmosLedger',{attrs:{\"msg\":\"Delegation\"}}),_c('TerraLedger',{attrs:{\"msg\":\"Delegation\"}}),_c('IrisLedger',{attrs:{\"msg\":\"Delegation\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"irisLedger\",staticStyle:{\"width\":\"300px\",\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('img',{attrs:{\"src\":\"/img/logo-irisnet.svg\",\"alt\":\"IrisNet\",\"title\":\"IrisNet\",\"width\":\"145\",\"height\":\"46\"}}),_c('br'),(this.staked!='')?_c('span',[_c('label',[_vm._v(\"Staked by ChainLayer: \")]),_c('br'),_c('span',[_vm._v(_vm._s(_vm.staked)+\" \"+_vm._s(_vm.denom)+\" (\"+_vm._s(_vm.stakedUSD)+\")\")]),_c('br')]):_vm._e(),(this.price!='')?_c('span',[_vm._v(\"Price \"+_vm._s(_vm.denom)+\": $ \"+_vm._s(_vm.price))]):_vm._e(),_c('br'),_c('button',{staticClass:\"btn btn-outline-success\",on:{\"click\":_vm.show}},[_vm._v(\"Delegate\")]),_c('modal',{attrs:{\"name\":\"iris-modal\",\"width\":600,\"draggable\":true,\"scrollable\":true,\"height\":\"auto\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"Ledger Delegation ChainLayer\")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},on:{\"click\":_vm.hide}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]),_c('div',{staticClass:\"modal-body\"},[_c('p',[_c('span',{staticStyle:{\"color\":\"forestgreen\"}},[_c('i',{staticClass:\"fas fa-plug fa-3x\"})]),_vm._v(\"                  \\n                    \"),(this.readytodelegate)?_c('span',{staticStyle:{\"color\":\"forestgreen\"}},[_c('i',{staticClass:\"fas fa-coins fa-3x\"})]):_vm._e(),(!this.readytodelegate)?_c('span',[_c('i',{staticClass:\"fas fa-coins fa-3x\"})]):_vm._e()]),(this.connecting==true)?_c('span',[_c('div',{staticClass:\"alert alert-info\"},[_vm._v(\"Looking for ledger\")]),_c('br'),_c('img',{attrs:{\"src\":\"/img/Spinner.gif\",\"height\":\"93\",\"width\":\"93\"}}),_c('br')]):_vm._e(),(this.isdelegating==true)?_c('span',[_c('div',{staticClass:\"alert alert-info\"},[_vm._v(\"Delegating, please check ledger\")]),_c('br'),_c('img',{attrs:{\"src\":\"/img/Spinner.gif\",\"height\":\"93\",\"width\":\"93\"}}),_c('br')]):_vm._e(),(this.success!='')?_c('span',[_c('div',{staticClass:\"alert alert-success\"},[_vm._v(_vm._s(_vm.success))])]):_vm._e(),(this.error!='')?_c('span',[_c('div',{staticClass:\"alert alert-warning\"},[_vm._v(_vm._s(_vm.error))])]):_vm._e(),(this.connecting==false && this.connected==false)?_c('span',[_c('button',{staticClass:\"btn btn-outline-success\",on:{\"click\":_vm.tryConnect}},[_vm._v(\"Connect Ledger\")]),_c('br')]):_vm._e(),(this.bech32!='')?_c('span',[_c('b',[_vm._v(\"Your Adress\")]),_c('br')]):_vm._e(),(this.bech32!='')?_c('span',[_c('b',[_vm._v(_vm._s(_vm.bech32))]),_c('br'),_c('br')]):_vm._e(),(this.balance_available!='')?_c('label',[_vm._v(\"Available Balance: \")]):_vm._e(),(this.balance_available!='')?_c('span',[_vm._v(_vm._s(_vm.balance_available)+\" \"+_vm._s(_vm.denom)),_c('br')]):_vm._e(),(this.balance_delegated!='')?_c('label',[_vm._v(\"Delegated Balance: \")]):_vm._e(),(this.balance_delegated!='')?_c('span',[_vm._v(_vm._s(_vm.balance_delegated)+\" \"+_vm._s(_vm.denom)),_c('br')]):_vm._e(),(this.balance_total!='')?_c('label',[_vm._v(\"Total Balance: \")]):_vm._e(),(this.balance_total!='')?_c('span',[_vm._v(_vm._s(_vm.balance_total)+\" \"+_vm._s(_vm.denom)),_c('br'),_c('br')]):_vm._e(),(this.readytodelegate)?_c('label',[_vm._v(\"Amount to delegate to ChainLayer (in \"+_vm._s(_vm.denom)+\"): \")]):_vm._e(),(this.readytodelegate)?_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.delegation),expression:\"delegation\",modifiers:{\"number\":true}}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.delegation)},on:{\"keypress\":_vm.onlyNumber,\"input\":function($event){if($event.target.composing){ return; }_vm.delegation=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}}):_vm._e(),_c('br'),_c('br')]),_c('div',{staticClass:\"modal-footer\"},[(this.readytodelegate)?_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.delegate}},[_vm._v(\"Delegate\")]):_vm._e(),_vm._v(\" \\n                \"),(this.readytodelegate)?_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.tryConnect}},[_vm._v(\"Refresh\")]):_vm._e(),_vm._v(\" \\n                \"),_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.hide}},[_vm._v(\"Done\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"irisLedger\" style=\"width: 300px; display:inline-block; vertical-align:top\">\n        <img src=\"/img/logo-irisnet.svg\" alt=\"IrisNet\" title=\"IrisNet\" width=\"145\" height=\"46\"><br>\n        <span v-if=\"this.staked!=''\"><label>Staked by ChainLayer: </label><br>\n            <span>{{staked}} {{denom}} ({{stakedUSD}})</span><br></span>\n        <span v-if=\"this.price!=''\">Price {{denom}}: $ {{price}}</span><br>\n        <button v-on:click=\"show\" class=\"btn btn-outline-success\">Delegate</button>\n\n        <modal name=\"iris-modal\" :width=\"600\" :draggable=\"true\" :scrollable=\"true\" height=\"auto\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Ledger Delegation ChainLayer</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" v-on:click=\"hide\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <p>\n                        <span style=\"color: forestgreen;\"><i class=\"fas fa-plug fa-3x\"></i></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <span v-if=\"this.readytodelegate\" style=\"color: forestgreen;\"><i class=\"fas fa-coins fa-3x\"></i></span>\n                        <span v-if=\"!this.readytodelegate\"><i class=\"fas fa-coins fa-3x\"></i></span>\n                    </p>\n                    <span v-if=\"this.connecting==true\"><div class=\"alert alert-info\">Looking for ledger</div><br><img src=\"/img/Spinner.gif\" height=\"93\" width=\"93\"/><br></span>\n                    <span v-if=\"this.isdelegating==true\"><div class=\"alert alert-info\">Delegating, please check ledger</div><br><img src=\"/img/Spinner.gif\" height=\"93\" width=\"93\"/><br></span>\n                    <span v-if=\"this.success!=''\"><div class=\"alert alert-success\">{{success}}</div></span>\n                    <span v-if=\"this.error!=''\"><div class=\"alert alert-warning\">{{error}}</div></span>\n                    <span v-if=\"this.connecting==false && this.connected==false\"><button v-on:click=\"tryConnect\" class=\"btn btn-outline-success\">Connect Ledger</button><br></span>\n                    <span v-if=\"this.bech32!=''\"><b>Your Adress</b><br></span>\n                    <span v-if=\"this.bech32!=''\"><b>{{bech32}}</b><br><br></span>\n                    <label v-if=\"this.balance_available!=''\">Available Balance: </label><span v-if=\"this.balance_available!=''\">{{balance_available}} {{denom}}<br></span>\n                    <label v-if=\"this.balance_delegated!=''\">Delegated Balance: </label><span v-if=\"this.balance_delegated!=''\">{{balance_delegated}} {{denom}}<br></span>\n                    <label v-if=\"this.balance_total!=''\">Total Balance: </label><span v-if=\"this.balance_total!=''\">{{balance_total}} {{denom}}<br><br></span>\n                    <label v-if=\"this.readytodelegate\">Amount to delegate to ChainLayer (in {{denom}}): </label>\n                    <input v-model.number=\"delegation\" type=\"number\" v-if=\"this.readytodelegate\" @keypress=\"onlyNumber\" class=\"form-control\" ><br>\n                    <br>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"delegate\" v-if=\"this.readytodelegate\">Delegate</button>&nbsp;\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"tryConnect\" v-if=\"this.readytodelegate\">Refresh</button>&nbsp;\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"hide\">Done</button>\n                </div>\n            </div>\n        </modal>\n    </div>\n</template>\n\n<script>\n    var { IrisDelegateTool } = require(\"cosmos-sdk-delegation-lib\");\n    import TransportU2F from '@ledgerhq/hw-transport-u2f';\n    import Big from 'big.js';\n\n    const transport = new TransportU2F();\n    const cdt = new IrisDelegateTool(transport);\n    cdt.setNodeURL('https://irishub-lcd.chainlayer.net');\n\n    var curformatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    var amtformatter = new Intl.NumberFormat('en-US', {\n        style: 'decimal',\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n    });\n\n    export default {\n        name: 'IrisLedger',\n        props: {\n            restUrl: String,\n        },\n        data() {\n            return {\n                myAddr: '',\n                bech32: '',\n                pk: '',\n                path: '',\n                accInfo: '',\n                sequence: '',\n                delegation: '',\n                reply: '',\n                balance_available: '',\n                balance_delegated: '',\n                balance_total: '',\n                connected: false,\n                connecting: false,\n                readytodelegate: false,\n                debug: true,\n                denom: '',\n                staked: '',\n                stakedUSD: '',\n                error: '',\n                price: '',\n                chainId: '',\n                validator: '',\n                rewards: '',\n                isdelegating: '',\n                success: '',\n                hrp: ''\n            }\n        },\n        computed: {\n            consoleStatus() {\n                return this.consoleLog;\n            },\n        },\n        created: function() {\n            this.init();\n        },\n        methods: {\n            show () {\n                this.$modal.show('iris-modal');\n            },\n            hide () {\n                this.$modal.hide('iris-modal');\n            },\n            onlyNumber ($event) {\n                //console.log($event.keyCode); //keyCodes value\n                let keyCode = ($event.keyCode ? $event.keyCode : $event.which);\n                if ((keyCode < 48 || keyCode > 57) && keyCode === 46) { // 46 is dot\n                    $event.preventDefault();\n                }\n            },\n            log: function (list, msg) {\n                if (this.debug) {\n                    // eslint-disable-next-line\n                    console.log(msg);\n                }\n            },\n            init: async function () {\n                this.success = '';\n                this.error = '';\n                this.myAddr = null;\n                this.denom = 'Iris';\n                this.isdelegating=false;\n                this.readytodelegate = false;\n                this.baseamount = 1000000000000000000;\n                this.validator = 'iva1kgddca7qj96z0qcxr2c45z73cfl0c75pmw0meu';\n                this.chainId = 'irishub';\n\n                this.log(this.consoleLog, \"Trying to connect...\");\n\n                // First get Validator Info\n                this.validators = await cdt.retrieveValidators();\n                this.staked = amtformatter.format(Big(this.validators[this.validator].totalShares));\n\n                this.price = await cdt.getPrice();\n                this.stakedUSD = curformatter.format(Big(this.validators[this.validator].totalShares * this.price));\n                this.$emit(\"irisStake\", Big(this.validators[this.validator].totalShares * this.price));\n            },\n            tryConnect: async function () {\n                this.success = '';\n                this.isdelegating=false;\n                this.error = '';\n                try {\n                    this.connecting = true;\n                    await cdt.connect();\n                } catch(e) {\n                    // TODO: Handle error if not logged in\n                    if (e == \"Error: Unknown Status Code: undefined\") {\n                        this.error = \"Can't find Ledger! Please connect Ledger, enter your pin code and start Terra app. Then click connect again...\";\n                    }\n                    this.log(this.consoleLog, e);\n                    this.connected = false;\n                    this.connecting = false;\n                    return;\n                }\n                if (!cdt.connected) {\n                    this.connected = false;\n                    this.log(this.consoleLog, cdt.lastError);\n                    return;\n                }\n                this.log(this.consoleLog, \"Connected!\");\n\n                try {\n                    this.myAddr = await cdt.retrieveAddress(0, 0);\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Unknown Status Code: 26628') {\n                        this.error = 'Enter Pin on Ledger';\n                    }\n                    this.connected = false;\n                    this.connecting = false;\n                    return\n                }\n                this.bech32 = this.myAddr.bech32;\n                this.pk = this.myAddr.pk;\n                this.path = this.myAddr.path;\n                this.log(this.consoleLog, this.myAddr);\n                this.log(this.consoleLog, `Address  : ${this.myAddr.bech32}`);\n                this.log(this.consoleLog, `PublicKey: ${this.myAddr.pk}`);\n                this.log(this.consoleLog, `Query ${this.myAddr.bech32}`);\n\n                this.accInfo = await cdt.getAccountInfo(this.myAddr);\n                if (this.accInfo.error) {\n                    this.log(this.consoleLog, \"getAccountInfo error\");\n                    this.log(this.consoleLog, this.accInfo.error);\n                    return\n                } else {\n                    this.log(this.consoleLog, this.accInfo.error);\n                    this.log(this.consoleLog, this.accInfo);\n                    this.sequence = this.accInfo.sequence;\n                    this.balance_available = amtformatter.format(Big(this.accInfo.balance/this.baseamount));\n                    this.delegation = parseInt(this.balance_available);\n                }\n\n                this.reply = await cdt.retrieveBalances([this.myAddr]);\n                if (this.reply.error) {\n                    this.log(this.consoleLog, \"retrieveBalances error\");\n                    this.log(this.consoleLog, this.reply.error);\n                    return\n                } else {\n                    this.log(this.consoleLog, this.reply);\n                    this.balance_delegated = amtformatter.format(Big(this.reply[0].delegationsTotal));\n                    this.balance_total = amtformatter.format(Big(this.reply[0].delegationsTotal/this.baseamount).add(Big(this.accInfo.balance/this.baseamount)));\n                    this.log(this.consoleLog, this.reply[0].delegationsTotal);\n                }\n                this.readytodelegate = true;\n                this.connecting = false;\n                this.connected = true;\n            },\n            delegate: async function () {\n                this.error = '';\n                if (this.delegation>this.balance_available) {\n                    this.error = 'You cannot delegate more than available balance';\n                    this.isdelegating=false;\n                    return;\n                }\n                if (this.delegation<=0) {\n                    this.error = 'You need to delegate more than 0';\n                    this.isdelegating=false;\n                    return;\n                }\n                this.isdelegating=true;\n\n                const txContext = {\n                    chainId: this.chainId,\n                    path: this.myAddr.path,\n                    bech32: this.myAddr.bech32,\n                    pk: this.myAddr.pk,\n                };\n\n                const dummyTx = await cdt.txCreateDelegate(\n                    txContext,\n                    this.validator,\n                    this.delegation * this.baseamount,   // TODO change this\n                    'Delegation to ChainLayer.io',\n                );\n\n                this.log(this.consoleLog, \"Waiting for device to sign\");\n\n                var signedTx = '';\n                try {\n                    signedTx = await cdt.sign(dummyTx, txContext);\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Transaction rejected') {\n                        this.error = 'Transaction rejected';\n                    } else if (e=='Error: Cosmos app does not seem to be open') {\n                        this.error = 'Ledger App does not seem to be open';\n                    } else {\n                        this.error = 'Unknown Error';\n                    }\n                    this.isdelegating=false;\n                    return\n                }\n\n                this.log(this.consoleLog, \"Broadcasting signed tx\");\n                var response = '';\n                try {\n                    response = await cdt.txSubmit(signedTx);\n                    if (response.error) {\n                        this.error = response.error;\n                        this.log(this.consoleLog, response);\n                        this.isdelegating=false;\n                        return\n                    }\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Transaction rejected') {\n                        this.error = 'Transaction rejected';\n                    } else {\n                        this.error = 'Unknown Error';\n                    }\n                    this.isdelegating=false;\n                    return\n                }\n                this.success = 'Delegation successfull! Please wait 30 seconds to refresh';\n                this.log(this.consoleLog, response);\n                this.isdelegating=false;\n            }\n        }\n    }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IrisLedger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IrisLedger.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./IrisLedger.vue?vue&type=template&id=0acbdfbc&\"\nimport script from \"./IrisLedger.vue?vue&type=script&lang=js&\"\nexport * from \"./IrisLedger.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cosmosLedger\",staticStyle:{\"width\":\"300px\",\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('img',{attrs:{\"src\":\"/img/logo-cosmos.svg\",\"alt\":\"Cosmos\",\"title\":\"Cosmos\",\"width\":\"145\",\"height\":\"46\"}}),_c('br'),(this.staked!='')?_c('span',[_c('label',[_vm._v(\"Staked by ChainLayer: \")]),_c('br'),_c('span',[_vm._v(_vm._s(_vm.staked)+\" \"+_vm._s(_vm.denom)+\" (\"+_vm._s(_vm.stakedUSD)+\")\")]),_c('br')]):_vm._e(),(this.price!='')?_c('span',[_vm._v(\"Price \"+_vm._s(_vm.denom)+\": $ \"+_vm._s(_vm.price))]):_vm._e(),_c('br'),_c('button',{staticClass:\"btn btn-outline-success\",on:{\"click\":_vm.show}},[_vm._v(\"Delegate\")]),_c('modal',{attrs:{\"name\":\"cosmos-modal\",\"width\":600,\"draggable\":true,\"scrollable\":true,\"height\":\"auto\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"Ledger Delegation ChainLayer\")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},on:{\"click\":_vm.hide}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]),_c('div',{staticClass:\"modal-body\"},[_c('p',[_c('span',{staticStyle:{\"color\":\"forestgreen\"}},[_c('i',{staticClass:\"fas fa-plug fa-3x\"})]),_vm._v(\"                  \\n                    \"),(this.readytodelegate)?_c('span',{staticStyle:{\"color\":\"forestgreen\"}},[_c('i',{staticClass:\"fas fa-coins fa-3x\"})]):_vm._e(),(!this.readytodelegate)?_c('span',[_c('i',{staticClass:\"fas fa-coins fa-3x\"})]):_vm._e()]),(this.connecting==true)?_c('span',[_c('div',{staticClass:\"alert alert-info\"},[_vm._v(\"Looking for ledger\")]),_c('br'),_c('img',{attrs:{\"src\":\"/img/Spinner.gif\",\"height\":\"93\",\"width\":\"93\"}}),_c('br')]):_vm._e(),(this.isdelegating==true)?_c('span',[_c('div',{staticClass:\"alert alert-info\"},[_vm._v(\"Delegating, please check ledger\")]),_c('br'),_c('img',{attrs:{\"src\":\"/img/Spinner.gif\",\"height\":\"93\",\"width\":\"93\"}}),_c('br')]):_vm._e(),(this.success!='')?_c('span',[_c('div',{staticClass:\"alert alert-success\"},[_vm._v(_vm._s(_vm.success))])]):_vm._e(),(this.error!='')?_c('span',[_c('div',{staticClass:\"alert alert-warning\"},[_vm._v(_vm._s(_vm.error))])]):_vm._e(),(this.connecting==false && this.connected==false)?_c('span',[_c('button',{staticClass:\"btn btn-outline-success\",on:{\"click\":_vm.tryConnect}},[_vm._v(\"Connect Ledger\")]),_c('br')]):_vm._e(),(this.bech32!='')?_c('span',[_c('b',[_vm._v(\"Your Adress\")]),_c('br')]):_vm._e(),(this.bech32!='')?_c('span',[_c('b',[_vm._v(_vm._s(_vm.bech32))]),_c('br'),_c('br')]):_vm._e(),(this.balance_available!='')?_c('label',[_vm._v(\"Available Balance: \")]):_vm._e(),(this.balance_available!='')?_c('span',[_vm._v(_vm._s(_vm.balance_available)+\" \"+_vm._s(_vm.denom)),_c('br')]):_vm._e(),(this.balance_delegated!='')?_c('label',[_vm._v(\"Delegated Balance: \")]):_vm._e(),(this.balance_delegated!='')?_c('span',[_vm._v(_vm._s(_vm.balance_delegated)+\" \"+_vm._s(_vm.denom)),_c('br')]):_vm._e(),(this.balance_total!='')?_c('label',[_vm._v(\"Total Balance: \")]):_vm._e(),(this.balance_total!='')?_c('span',[_vm._v(_vm._s(_vm.balance_total)+\" \"+_vm._s(_vm.denom)),_c('br'),_c('br')]):_vm._e(),(this.readytodelegate)?_c('label',[_vm._v(\"Amount to delegate to ChainLayer (in \"+_vm._s(_vm.denom)+\"): \")]):_vm._e(),(this.readytodelegate)?_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.delegation),expression:\"delegation\",modifiers:{\"number\":true}}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.delegation)},on:{\"keypress\":_vm.onlyNumber,\"input\":function($event){if($event.target.composing){ return; }_vm.delegation=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}}):_vm._e(),_c('br'),_c('br')]),_c('div',{staticClass:\"modal-footer\"},[(this.readytodelegate)?_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.delegate}},[_vm._v(\"Delegate\")]):_vm._e(),_vm._v(\" \\n                \"),(this.readytodelegate)?_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.tryConnect}},[_vm._v(\"Refresh\")]):_vm._e(),_vm._v(\" \\n                \"),_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.hide}},[_vm._v(\"Done\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"cosmosLedger\" style=\"width: 300px; display:inline-block; vertical-align:top\">\n        <img src=\"/img/logo-cosmos.svg\" alt=\"Cosmos\" title=\"Cosmos\" width=\"145\" height=\"46\"><br>\n        <span v-if=\"this.staked!=''\"><label>Staked by ChainLayer: </label><br>\n            <span>{{staked}} {{denom}} ({{stakedUSD}})</span><br></span>\n        <span v-if=\"this.price!=''\">Price {{denom}}: $ {{price}}</span><br>\n        <button v-on:click=\"show\" class=\"btn btn-outline-success\">Delegate</button>\n\n        <modal name=\"cosmos-modal\" :width=\"600\" :draggable=\"true\" :scrollable=\"true\" height=\"auto\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Ledger Delegation ChainLayer</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" v-on:click=\"hide\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <p>\n                        <span style=\"color: forestgreen;\"><i class=\"fas fa-plug fa-3x\"></i></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <span v-if=\"this.readytodelegate\" style=\"color: forestgreen;\"><i class=\"fas fa-coins fa-3x\"></i></span>\n                        <span v-if=\"!this.readytodelegate\"><i class=\"fas fa-coins fa-3x\"></i></span>\n                    </p>\n                    <span v-if=\"this.connecting==true\"><div class=\"alert alert-info\">Looking for ledger</div><br><img src=\"/img/Spinner.gif\" height=\"93\" width=\"93\"/><br></span>\n                    <span v-if=\"this.isdelegating==true\"><div class=\"alert alert-info\">Delegating, please check ledger</div><br><img src=\"/img/Spinner.gif\" height=\"93\" width=\"93\"/><br></span>\n                    <span v-if=\"this.success!=''\"><div class=\"alert alert-success\">{{success}}</div></span>\n                    <span v-if=\"this.error!=''\"><div class=\"alert alert-warning\">{{error}}</div></span>\n                    <span v-if=\"this.connecting==false && this.connected==false\"><button v-on:click=\"tryConnect\" class=\"btn btn-outline-success\">Connect Ledger</button><br></span>\n                    <span v-if=\"this.bech32!=''\"><b>Your Adress</b><br></span>\n                    <span v-if=\"this.bech32!=''\"><b>{{bech32}}</b><br><br></span>\n                    <label v-if=\"this.balance_available!=''\">Available Balance: </label><span v-if=\"this.balance_available!=''\">{{balance_available}} {{denom}}<br></span>\n                    <label v-if=\"this.balance_delegated!=''\">Delegated Balance: </label><span v-if=\"this.balance_delegated!=''\">{{balance_delegated}} {{denom}}<br></span>\n                    <label v-if=\"this.balance_total!=''\">Total Balance: </label><span v-if=\"this.balance_total!=''\">{{balance_total}} {{denom}}<br><br></span>\n                    <label v-if=\"this.readytodelegate\">Amount to delegate to ChainLayer (in {{denom}}): </label>\n                    <input v-model.number=\"delegation\" type=\"number\" v-if=\"this.readytodelegate\" @keypress=\"onlyNumber\" class=\"form-control\" ><br>\n                    <br>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"delegate\" v-if=\"this.readytodelegate\">Delegate</button>&nbsp;\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"tryConnect\" v-if=\"this.readytodelegate\">Refresh</button>&nbsp;\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"hide\">Done</button>\n                </div>\n            </div>\n        </modal>\n    </div>\n</template>\n\n<script>\n    var { CosmosDelegateTool } = require(\"cosmos-sdk-delegation-lib\");\n    import TransportU2F from '@ledgerhq/hw-transport-u2f';\n    import Big from 'big.js';\n\n    const transport = new TransportU2F();\n    const cdt = new CosmosDelegateTool(transport);\n    cdt.setNodeURL('https://cosmoshub-lcd.chainlayer.net');\n\n    var curformatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    var amtformatter = new Intl.NumberFormat('en-US', {\n        style: 'decimal',\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n    });\n\n    export default {\n        name: 'CosmosLedger',\n        props: {\n            restUrl: String,\n        },\n        data() {\n            return {\n                myAddr: '',\n                bech32: '',\n                pk: '',\n                path: '',\n                accInfo: '',\n                sequence: '',\n                delegation: '',\n                reply: '',\n                balance_available: '',\n                balance_delegated: '',\n                balance_total: '',\n                connected: false,\n                connecting: false,\n                readytodelegate: false,\n                debug: true,\n                denom: '',\n                staked: '',\n                stakedUSD: '',\n                error: '',\n                price: '',\n                chainId: '',\n                validator: '',\n                rewards: '',\n                isdelegating: '',\n                success: '',\n                hrp: ''\n            }\n        },\n        computed: {\n            consoleStatus() {\n                return this.consoleLog;\n            },\n        },\n        created: function() {\n            this.init();\n        },\n        methods: {\n            show () {\n                this.$modal.show('cosmos-modal');\n            },\n            hide () {\n                this.$modal.hide('cosmos-modal');\n            },\n            onlyNumber ($event) {\n                //console.log($event.keyCode); //keyCodes value\n                let keyCode = ($event.keyCode ? $event.keyCode : $event.which);\n                if ((keyCode < 48 || keyCode > 57) && keyCode === 46) { // 46 is dot\n                    $event.preventDefault();\n                }\n            },\n            log: function (list, msg) {\n                if (this.debug) {\n                    // eslint-disable-next-line\n                    console.log(msg);\n                }\n            },\n            init: async function () {\n                this.success = '';\n                this.error = '';\n                this.myAddr = null;\n                this.denom = 'Atom';\n                this.isdelegating=false;\n                this.readytodelegate = false;\n                this.baseamount = 1000000;\n                this.validator = 'cosmosvaloper1kgddca7qj96z0qcxr2c45z73cfl0c75p7f3s2e';\n                this.chainId = 'cosmoshub-2';\n\n                this.log(this.consoleLog, \"Trying to connect...\");\n\n                // First get Validator Info\n                this.validators = await cdt.retrieveValidators();\n                this.staked = amtformatter.format(Big(this.validators[this.validator].totalShares / this.baseamount));\n\n                this.price = await cdt.getPrice();\n                this.stakedUSD = curformatter.format(Big(this.validators[this.validator].totalShares / this.baseamount * this.price));\n                this.$emit(\"cosmosStake\", Big(this.validators[this.validator].totalShares / this.baseamount * this.price));\n            },\n            tryConnect: async function () {\n                this.success = '';\n                this.isdelegating=false;\n                this.error = '';\n                try {\n                    this.connecting = true;\n                    await cdt.connect();\n                } catch(e) {\n                    // TODO: Handle error if not logged in\n                    if (e == \"Error: Unknown Status Code: undefined\") {\n                        this.error = \"Can't find Ledger! Please connect Ledger, enter your pin code and start Terra app. Then click connect again...\";\n                    }\n                    this.log(this.consoleLog, e);\n                    this.connected = false;\n                    this.connecting = false;\n                    return;\n                }\n                if (!cdt.connected) {\n                    this.connected = false;\n                    this.log(this.consoleLog, cdt.lastError);\n                    return;\n                }\n                this.log(this.consoleLog, \"Connected!\");\n\n                try {\n                    this.myAddr = await cdt.retrieveAddress(0, 0);\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Unknown Status Code: 26628') {\n                        this.error = 'Enter Pin on Ledger';\n                    }\n                    this.connected = false;\n                    this.connecting = false;\n                    return\n                }\n                this.bech32 = this.myAddr.bech32;\n                this.pk = this.myAddr.pk;\n                this.path = this.myAddr.path;\n                this.log(this.consoleLog, this.myAddr);\n                this.log(this.consoleLog, `Address  : ${this.myAddr.bech32}`);\n                this.log(this.consoleLog, `PublicKey: ${this.myAddr.pk}`);\n                this.log(this.consoleLog, `Query ${this.myAddr.bech32}`);\n\n                this.accInfo = await cdt.getAccountInfo(this.myAddr);\n                if (this.accInfo.error) {\n                    this.log(this.consoleLog, \"getAccountInfo error\");\n                    this.log(this.consoleLog, this.accInfo.error);\n                    return\n                } else {\n                    this.log(this.consoleLog, this.accInfo.error);\n                    this.log(this.consoleLog, this.accInfo);\n                    this.sequence = this.accInfo.sequence;\n                    this.balance_available = amtformatter.format(Big(this.accInfo.balance/this.baseamount));\n                    this.delegation = parseInt(this.balance_available);\n                }\n\n                this.reply = await cdt.retrieveBalances([this.myAddr]);\n                if (this.reply.error) {\n                    this.log(this.consoleLog, \"retrieveBalances error\");\n                    this.log(this.consoleLog, this.reply.error);\n                    return\n                } else {\n                    this.log(this.consoleLog, this.reply);\n                    this.balance_delegated = amtformatter.format(Big(this.reply[0].delegationsTotal/this.baseamount));\n                    this.balance_total = amtformatter.format(Big(this.reply[0].delegationsTotal/this.baseamount).add(Big(this.accInfo.balance/this.baseamount)));\n                    this.log(this.consoleLog, this.reply[0].delegationsTotal);\n                }\n                this.readytodelegate = true;\n                this.connecting = false;\n                this.connected = true;\n            },\n            delegate: async function () {\n                this.error = '';\n                if (this.delegation>this.balance_available) {\n                    this.error = 'You cannot delegate more than available balance';\n                    this.isdelegating=false;\n                    return;\n                }\n                if (this.delegation<=0) {\n                    this.error = 'You need to delegate more than 0';\n                    this.isdelegating=false;\n                    return;\n                }\n                this.isdelegating=true;\n\n                const txContext = {\n                    chainId: this.chainId,\n                    path: this.myAddr.path,\n                    bech32: this.myAddr.bech32,\n                    pk: this.myAddr.pk,\n                };\n\n                const dummyTx = await cdt.txCreateDelegate(\n                    txContext,\n                    this.validator,\n                    this.delegation * this.baseamount,   // TODO change this\n                    'Delegation to ChainLayer.io',\n                );\n\n                this.log(this.consoleLog, \"Waiting for device to sign\");\n\n                var signedTx = '';\n                try {\n                    signedTx = await cdt.sign(dummyTx, txContext);\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Transaction rejected') {\n                        this.error = 'Transaction rejected';\n                    } else if (e=='Error: Cosmos app does not seem to be open') {\n                        this.error = 'Ledger App does not seem to be open';\n                    } else {\n                        this.error = 'Unknown Error';\n                    }\n                    this.isdelegating=false;\n                    return\n                }\n\n                this.log(this.consoleLog, \"Broadcasting signed tx\");\n                var response = '';\n                try {\n                    response = await cdt.txSubmit(signedTx);\n                    if (response.error) {\n                        this.error = response.error;\n                        this.log(this.consoleLog, response);\n                        this.isdelegating=false;\n                        return\n                    }\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Transaction rejected') {\n                        this.error = 'Transaction rejected';\n                    } else {\n                        this.error = 'Unknown Error';\n                    }\n                    this.isdelegating=false;\n                    return\n                }\n                this.success = 'Delegation successfull! Please wait 30 seconds to refresh';\n                this.log(this.consoleLog, response);\n                this.isdelegating=false;\n            }, /*\n            withdraw: async function () {\n                if (!cdt.connected) {\n                    this.log(this.consoleLog, \"Try connecting first..\");\n                    return;\n                }\n                if (this.myAddr === null) {\n                    this.log(this.consoleLog, \"Retrieve the device address first\");\n                    return;\n                }\n                const txContext = {\n                    chainId: this.chainId,\n                    path: this.myAddr.path,\n                    bech32: this.myAddr.bech32,\n                    pk: this.myAddr.pk,\n                };\n\n                const dummyTx = await cdt.txCreateWithdrawl(\n                    txContext,\n                    this.validator,\n                    'Delegation to ChainLayer.io',\n                );\n\n                this.log(this.consoleLog, \"Waiting for device to sign\");\n\n                const signedTx = await cdt.sign(dummyTx, txContext);\n\n                this.log(this.consoleLog, \"Broadcasting signed tx\");\n                const response = await  cdt.txSubmit(signedTx);\n\n                this.log(this.consoleLog, response);\n            } */\n        }\n    }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CosmosLedger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CosmosLedger.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CosmosLedger.vue?vue&type=template&id=a9b01a8a&\"\nimport script from \"./CosmosLedger.vue?vue&type=script&lang=js&\"\nexport * from \"./CosmosLedger.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"terraLedger\",staticStyle:{\"width\":\"300px\",\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('img',{attrs:{\"src\":\"/img/logo-terra.svg\",\"alt\":\"Terra\",\"title\":\"Terra\",\"width\":\"145\",\"height\":\"46\"}}),_c('br'),(this.staked!='')?_c('span',[_c('label',[_vm._v(\"Staked by ChainLayer: \")]),_c('br'),_c('span',[_vm._v(_vm._s(_vm.staked)+\" \"+_vm._s(_vm.denom)+\" (\"+_vm._s(_vm.stakedUSD)+\")\")]),_c('br')]):_vm._e(),(this.price!='')?_c('span',[_vm._v(\"Price \"+_vm._s(_vm.denom)+\": $ \"+_vm._s(_vm.price))]):_vm._e(),_c('br'),_c('button',{staticClass:\"btn btn-outline-success\",on:{\"click\":_vm.show}},[_vm._v(\"Delegate\")]),_c('modal',{attrs:{\"name\":\"terra-modal\",\"width\":600,\"draggable\":true,\"scrollable\":true,\"height\":\"auto\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"Ledger Delegation ChainLayer\")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},on:{\"click\":_vm.hide}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]),_c('div',{staticClass:\"modal-body\"},[_c('p',[_c('span',{staticStyle:{\"color\":\"forestgreen\"}},[_c('i',{staticClass:\"fas fa-plug fa-3x\"})]),_vm._v(\"                  \\n                    \"),(this.readytodelegate)?_c('span',{staticStyle:{\"color\":\"forestgreen\"}},[_c('i',{staticClass:\"fas fa-coins fa-3x\"})]):_vm._e(),(!this.readytodelegate)?_c('span',[_c('i',{staticClass:\"fas fa-coins fa-3x\"})]):_vm._e()]),(this.connecting==true)?_c('span',[_c('div',{staticClass:\"alert alert-info\"},[_vm._v(\"Looking for ledger\")]),_c('br'),_c('img',{attrs:{\"src\":\"/img/Spinner.gif\",\"height\":\"93\",\"width\":\"93\"}}),_c('br')]):_vm._e(),(this.isdelegating==true)?_c('span',[_c('div',{staticClass:\"alert alert-info\"},[_vm._v(\"Delegating, please check ledger\")]),_c('br'),_c('img',{attrs:{\"src\":\"/img/Spinner.gif\",\"height\":\"93\",\"width\":\"93\"}}),_c('br')]):_vm._e(),(this.success!='')?_c('span',[_c('div',{staticClass:\"alert alert-success\"},[_vm._v(_vm._s(_vm.success))])]):_vm._e(),(this.error!='')?_c('span',[_c('div',{staticClass:\"alert alert-warning\"},[_vm._v(_vm._s(_vm.error))])]):_vm._e(),(this.connecting==false && this.connected==false)?_c('span',[_c('button',{staticClass:\"btn btn-outline-success\",on:{\"click\":_vm.tryConnect}},[_vm._v(\"Connect Ledger\")]),_c('br')]):_vm._e(),(this.bech32!='')?_c('span',[_c('b',[_vm._v(\"Your Adress\")]),_c('br')]):_vm._e(),(this.bech32!='')?_c('span',[_c('b',[_vm._v(_vm._s(_vm.bech32))]),_c('br'),_c('br')]):_vm._e(),(this.balance_available!='')?_c('label',[_vm._v(\"Available Balance: \")]):_vm._e(),(this.balance_available!='')?_c('span',[_vm._v(_vm._s(_vm.balance_available)+\" \"+_vm._s(_vm.denom)),_c('br')]):_vm._e(),(this.balance_delegated!='')?_c('label',[_vm._v(\"Delegated Balance: \")]):_vm._e(),(this.balance_delegated!='')?_c('span',[_vm._v(_vm._s(_vm.balance_delegated)+\" \"+_vm._s(_vm.denom)),_c('br')]):_vm._e(),(this.balance_total!='')?_c('label',[_vm._v(\"Total Balance: \")]):_vm._e(),(this.balance_total!='')?_c('span',[_vm._v(_vm._s(_vm.balance_total)+\" \"+_vm._s(_vm.denom)),_c('br'),_c('br')]):_vm._e(),(this.readytodelegate)?_c('label',[_vm._v(\"Amount to delegate to ChainLayer (in \"+_vm._s(_vm.denom)+\"): \")]):_vm._e(),(this.readytodelegate)?_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.delegation),expression:\"delegation\",modifiers:{\"number\":true}}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.delegation)},on:{\"keypress\":_vm.onlyNumber,\"input\":function($event){if($event.target.composing){ return; }_vm.delegation=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}}):_vm._e(),_c('br'),_c('br')]),_c('div',{staticClass:\"modal-footer\"},[(this.readytodelegate)?_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.delegate}},[_vm._v(\"Delegate\")]):_vm._e(),_vm._v(\" \\n                \"),(this.readytodelegate)?_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.tryConnect}},[_vm._v(\"Refresh\")]):_vm._e(),_vm._v(\" \\n                \"),_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.hide}},[_vm._v(\"Done\")])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"terraLedger\" style=\"width: 300px; display:inline-block; vertical-align:top\">\n        <img src=\"/img/logo-terra.svg\" alt=\"Terra\" title=\"Terra\" width=\"145\" height=\"46\"><br>\n        <span v-if=\"this.staked!=''\"><label>Staked by ChainLayer: </label><br>\n            <span>{{staked}} {{denom}} ({{stakedUSD}})</span><br></span>\n        <span v-if=\"this.price!=''\">Price {{denom}}: $ {{price}}</span><br>\n        <button v-on:click=\"show\" class=\"btn btn-outline-success\">Delegate</button>\n\n        <modal name=\"terra-modal\" :width=\"600\" :draggable=\"true\" :scrollable=\"true\" height=\"auto\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Ledger Delegation ChainLayer</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" v-on:click=\"hide\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <p>\n                        <span style=\"color: forestgreen;\"><i class=\"fas fa-plug fa-3x\"></i></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <span v-if=\"this.readytodelegate\" style=\"color: forestgreen;\"><i class=\"fas fa-coins fa-3x\"></i></span>\n                        <span v-if=\"!this.readytodelegate\"><i class=\"fas fa-coins fa-3x\"></i></span>\n                    </p>\n                    <span v-if=\"this.connecting==true\"><div class=\"alert alert-info\">Looking for ledger</div><br><img src=\"/img/Spinner.gif\" height=\"93\" width=\"93\"/><br></span>\n                    <span v-if=\"this.isdelegating==true\"><div class=\"alert alert-info\">Delegating, please check ledger</div><br><img src=\"/img/Spinner.gif\" height=\"93\" width=\"93\"/><br></span>\n                    <span v-if=\"this.success!=''\"><div class=\"alert alert-success\">{{success}}</div></span>\n                    <span v-if=\"this.error!=''\"><div class=\"alert alert-warning\">{{error}}</div></span>\n                    <span v-if=\"this.connecting==false && this.connected==false\"><button v-on:click=\"tryConnect\" class=\"btn btn-outline-success\">Connect Ledger</button><br></span>\n                    <span v-if=\"this.bech32!=''\"><b>Your Adress</b><br></span>\n                    <span v-if=\"this.bech32!=''\"><b>{{bech32}}</b><br><br></span>\n                    <label v-if=\"this.balance_available!=''\">Available Balance: </label><span v-if=\"this.balance_available!=''\">{{balance_available}} {{denom}}<br></span>\n                    <label v-if=\"this.balance_delegated!=''\">Delegated Balance: </label><span v-if=\"this.balance_delegated!=''\">{{balance_delegated}} {{denom}}<br></span>\n                    <label v-if=\"this.balance_total!=''\">Total Balance: </label><span v-if=\"this.balance_total!=''\">{{balance_total}} {{denom}}<br><br></span>\n                    <label v-if=\"this.readytodelegate\">Amount to delegate to ChainLayer (in {{denom}}): </label>\n                    <input v-model.number=\"delegation\" type=\"number\" v-if=\"this.readytodelegate\" @keypress=\"onlyNumber\" class=\"form-control\" ><br>\n                    <br>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"delegate\" v-if=\"this.readytodelegate\">Delegate</button>&nbsp;\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"tryConnect\" v-if=\"this.readytodelegate\">Refresh</button>&nbsp;\n                    <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"hide\">Done</button>\n                </div>\n            </div>\n        </modal>\n    </div>\n</template>\n\n<script>\n    var { TerraDelegateTool } = require(\"cosmos-sdk-delegation-lib\");\n    import TransportU2F from '@ledgerhq/hw-transport-u2f';\n    import Big from 'big.js';\n\n    const transport = new TransportU2F();\n    const cdt = new TerraDelegateTool(transport);\n    cdt.setNodeURL('https://columbus-lcd.chainlayer.net');\n\n    var curformatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    var amtformatter = new Intl.NumberFormat('en-US', {\n        style: 'decimal',\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n    });\n\n    export default {\n        name: 'TerraLedger',\n        props: {\n            restUrl: String,\n        },\n        data() {\n            return {\n                myAddr: '',\n                bech32: '',\n                pk: '',\n                path: '',\n                accInfo: '',\n                sequence: '',\n                delegation: '',\n                reply: '',\n                balance_available: '',\n                balance_delegated: '',\n                balance_total: '',\n                connected: false,\n                connecting: false,\n                readytodelegate: false,\n                debug: true,\n                denom: '',\n                staked: '',\n                stakedUSD: '',\n                error: '',\n                price: '',\n                chainId: '',\n                validator: '',\n                rewards: '',\n                isdelegating: '',\n                success: '',\n                hrp: ''\n            }\n        },\n        computed: {\n            consoleStatus() {\n                return this.consoleLog;\n            },\n        },\n        created: function() {\n            this.init();\n        },\n        methods: {\n            show () {\n                this.$modal.show('terra-modal');\n            },\n            hide () {\n                this.$modal.hide('terra-modal');\n            },\n            onlyNumber ($event) {\n                //console.log($event.keyCode); //keyCodes value\n                let keyCode = ($event.keyCode ? $event.keyCode : $event.which);\n                if ((keyCode < 48 || keyCode > 57) && keyCode !== 46) { // 46 is dot\n                    $event.preventDefault();\n                }\n            },\n            log: function (list, msg) {\n                if (this.debug) {\n                    // eslint-disable-next-line\n                    console.log(msg);\n                }\n            },\n            init: async function () {\n                this.success = '';\n                this.error = '';\n                this.myAddr = null;\n                this.denom = 'Luna';\n                this.isdelegating=false;\n                this.readytodelegate = false;\n                this.baseamount = 1000000;\n                this.validator = 'terravaloper1kgddca7qj96z0qcxr2c45z73cfl0c75paknc5e';\n                this.chainId = 'columbus-2';\n\n                this.log(this.consoleLog, \"Trying to connect...\");\n\n                // First get Validator Info\n                this.validators = await cdt.retrieveValidators();\n                this.staked = amtformatter.format(Big(this.validators[this.validator].totalShares / this.baseamount));\n\n                this.price = await cdt.getPrice();\n                this.stakedUSD = curformatter.format(Big(this.validators[this.validator].totalShares / this.baseamount * this.price));\n                this.$emit(\"terraStake\", Big(this.validators[this.validator].totalShares / this.baseamount * this.price));\n            },\n            tryConnect: async function () {\n                this.success = '';\n                this.isdelegating=false;\n                this.error = '';\n                try {\n                    this.connecting = true;\n                    await cdt.connect();\n                } catch(e) {\n                    // TODO: Handle error if not logged in\n                    if (e == \"Error: Unknown Status Code: undefined\") {\n                        this.error = \"Can't find Ledger! Please connect Ledger, enter your pin code and start Terra app. Then click connect again...\";\n                    }\n                    this.log(this.consoleLog, e);\n                    this.connected = false;\n                    this.connecting = false;\n                    return;\n                }\n                if (!cdt.connected) {\n                    this.connected = false;\n                    this.log(this.consoleLog, cdt.lastError);\n                    return;\n                }\n                this.log(this.consoleLog, \"Connected!\");\n\n                try {\n                    this.myAddr = await cdt.retrieveAddress(0, 0);\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Unknown Status Code: 26628') {\n                        this.error = 'Enter Pin on Ledger';\n                    }\n                    this.connected = false;\n                    this.connecting = false;\n                    return\n                }\n                this.bech32 = this.myAddr.bech32;\n                this.pk = this.myAddr.pk;\n                this.path = this.myAddr.path;\n                this.log(this.consoleLog, this.myAddr);\n                this.log(this.consoleLog, `Address  : ${this.myAddr.bech32}`);\n                this.log(this.consoleLog, `PublicKey: ${this.myAddr.pk}`);\n                this.log(this.consoleLog, `Query ${this.myAddr.bech32}`);\n\n                this.accInfo = await cdt.getAccountInfo(this.myAddr);\n                if (this.accInfo.error) {\n                    this.log(this.consoleLog, \"getAccountInfo error\");\n                    this.log(this.consoleLog, this.accInfo.error);\n                    return\n                } else {\n                    this.log(this.consoleLog, this.accInfo.error);\n                    this.log(this.consoleLog, this.accInfo);\n                    this.sequence = this.accInfo.sequence;\n                    this.balance_available = amtformatter.format(Big(this.accInfo.balance/this.baseamount));\n                    this.delegation = parseInt(this.balance_available);\n                }\n\n                this.reply = await cdt.retrieveBalances([this.myAddr]);\n                if (this.reply.error) {\n                    this.log(this.consoleLog, \"retrieveBalances error\");\n                    this.log(this.consoleLog, this.reply.error);\n                    return\n                } else {\n                    this.log(this.consoleLog, this.reply);\n                    this.balance_delegated = amtformatter.format(Big(this.reply[0].delegationsTotal/this.baseamount));\n                    this.balance_total = amtformatter.format(Big(this.reply[0].delegationsTotal/this.baseamount).add(Big(this.accInfo.balance/this.baseamount)));\n                    this.log(this.consoleLog, this.reply[0].delegationsTotal);\n                }\n                this.readytodelegate = true;\n                this.connecting = false;\n                this.connected = true;\n            },\n            delegate: async function () {\n                this.error = '';\n                if (this.delegation>this.balance_available) {\n                    this.error = 'You cannot delegate more than available balance';\n                    this.isdelegating=false;\n                    return;\n                }\n                if (this.delegation<=0) {\n                    this.error = 'You need to delegate more than 0';\n                    this.isdelegating=false;\n                    return;\n                }\n                this.isdelegating=true;\n\n                const txContext = {\n                    chainId: this.chainId,\n                    path: this.myAddr.path,\n                    bech32: this.myAddr.bech32,\n                    pk: this.myAddr.pk,\n                };\n\n                const dummyTx = await cdt.txCreateDelegate(\n                    txContext,\n                    this.validator,\n                    this.delegation * this.baseamount,   // TODO change this\n                    'Delegation to ChainLayer.io',\n                );\n\n                this.log(this.consoleLog, \"Waiting for device to sign\");\n\n                var signedTx = '';\n                try {\n                    signedTx = await cdt.sign(dummyTx, txContext);\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Transaction rejected') {\n                        this.error = 'Transaction rejected';\n                    } else if (e=='Error: Cosmos app does not seem to be open') {\n                            this.error = 'Ledger App does not seem to be open';\n                    } else {\n                        this.error = 'Unknown Error';\n                    }\n                    this.isdelegating=false;\n                    return\n                }\n\n                this.log(this.consoleLog, \"Broadcasting signed tx\");\n                var response = '';\n                try {\n                    response = await cdt.txSubmit(signedTx);\n                    if (response.error) {\n                        this.error = response.error;\n                        this.log(this.consoleLog, response);\n                        this.isdelegating=false;\n                        return\n                    }\n                } catch(e) {\n                    this.log(this.consoleLog, e);\n                    if (e=='Error: Transaction rejected') {\n                        this.error = 'Transaction rejected';\n                    } else {\n                        this.error = 'Unknown Error';\n                    }\n                    this.isdelegating=false;\n                    return\n                }\n                this.success = 'Delegation successfull! Please wait 30 seconds to refresh';\n                this.log(this.consoleLog, response);\n                this.isdelegating=false;\n            }\n        }\n    }\n</script>\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TerraLedger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TerraLedger.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TerraLedger.vue?vue&type=template&id=7f14a164&\"\nimport script from \"./TerraLedger.vue?vue&type=script&lang=js&\"\nexport * from \"./TerraLedger.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\" style=\"vertical-align:top\">\n    <h3>Validating Networks</h3>\n    <CosmosLedger msg=\"Delegation\"/>\n    <TerraLedger msg=\"Delegation\"/>\n    <IrisLedger msg=\"Delegation\"/>\n  </div>\n</template>\n\n<script>\nimport IrisLedger from './components/IrisLedger.vue'\nimport CosmosLedger from './components/CosmosLedger.vue'\nimport TerraLedger from './components/TerraLedger.vue'\nimport Big from 'big.js';\n\nexport default {\n  name: 'app',\n  components: {\n    IrisLedger,\n    CosmosLedger,\n    TerraLedger,\n  },\n  data: function() {\n    return {\n      cosmosStake: Big(0),\n      terraStake: Big(0),\n      irisStake: Big(0),\n    };\n  },\n  methods: {\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ndiv.v--modal {\n  padding: 5px;\n  text-align: center;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1420785c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport VModal from 'vue-js-modal'\n\nVue.use(VModal);\nVue.config.productionTip = false;\n\nnew Vue({\n    render: h => h(App),\n}).$mount('#app');\n"],"sourceRoot":""}